import { z } from 'zod';
export declare const XCodeSampleSchema: z.ZodObject<{
    lang: z.ZodCatch<z.ZodOptional<z.ZodString>>;
    label: z.ZodCatch<z.ZodOptional<z.ZodString>>;
    source: z.ZodString;
}, "strip", z.ZodTypeAny, {
    source: string;
    label?: string | undefined;
    lang?: string | undefined;
}, {
    source: string;
    label?: unknown;
    lang?: unknown;
}>;
export declare const XCodeSamplesSchema: z.ZodObject<{
    'x-codeSamples': z.ZodCatch<z.ZodOptional<z.ZodArray<z.ZodObject<{
        lang: z.ZodCatch<z.ZodOptional<z.ZodString>>;
        label: z.ZodCatch<z.ZodOptional<z.ZodString>>;
        source: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        source: string;
        label?: string | undefined;
        lang?: string | undefined;
    }, {
        source: string;
        label?: unknown;
        lang?: unknown;
    }>, "many">>>;
    'x-code-samples': z.ZodCatch<z.ZodOptional<z.ZodArray<z.ZodObject<{
        lang: z.ZodCatch<z.ZodOptional<z.ZodString>>;
        label: z.ZodCatch<z.ZodOptional<z.ZodString>>;
        source: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        source: string;
        label?: string | undefined;
        lang?: string | undefined;
    }, {
        source: string;
        label?: unknown;
        lang?: unknown;
    }>, "many">>>;
    'x-custom-examples': z.ZodCatch<z.ZodOptional<z.ZodArray<z.ZodObject<{
        lang: z.ZodCatch<z.ZodOptional<z.ZodString>>;
        label: z.ZodCatch<z.ZodOptional<z.ZodString>>;
        source: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        source: string;
        label?: string | undefined;
        lang?: string | undefined;
    }, {
        source: string;
        label?: unknown;
        lang?: unknown;
    }>, "many">>>;
}, "strip", z.ZodTypeAny, {
    'x-codeSamples'?: {
        source: string;
        label?: string | undefined;
        lang?: string | undefined;
    }[] | undefined;
    'x-code-samples'?: {
        source: string;
        label?: string | undefined;
        lang?: string | undefined;
    }[] | undefined;
    'x-custom-examples'?: {
        source: string;
        label?: string | undefined;
        lang?: string | undefined;
    }[] | undefined;
}, {
    'x-codeSamples'?: unknown;
    'x-code-samples'?: unknown;
    'x-custom-examples'?: unknown;
}>;
export type XCodeSample = z.infer<typeof XCodeSampleSchema>;
//# sourceMappingURL=x-code-samples.d.ts.map