{
  "version": 3,
  "sources": ["../../src/api-reference/api-reference-configuration.ts"],
  "sourcesContent": ["import { z } from 'zod'\n\nimport { ApiClientPluginSchema } from '../api-client'\nimport type { TargetId } from '../snippetz'\nimport { ApiReferencePluginSchema } from './api-reference-plugin'\nimport type { AuthenticationConfiguration } from './authentication-configuration'\n\n/** Available theme presets for the API reference */\nconst themeIdEnum = z.enum([\n  'alternate',\n  'default',\n  'moon',\n  'purple',\n  'solarized',\n  'bluePlanet',\n  'deepSpace',\n  'saturn',\n  'kepler',\n  'elysiajs',\n  'fastify',\n  'mars',\n  'laserwave',\n  'none',\n])\n\n/** Valid keys that can be used with CTRL/CMD to open the search modal */\nconst searchHotKeyEnum = z.enum([\n  'a',\n  'b',\n  'c',\n  'd',\n  'e',\n  'f',\n  'g',\n  'h',\n  'i',\n  'j',\n  'k',\n  'l',\n  'm',\n  'n',\n  'o',\n  'p',\n  'q',\n  'r',\n  's',\n  't',\n  'u',\n  'v',\n  'w',\n  'x',\n  'y',\n  'z',\n])\n\n/** Supported integration types */\nconst integrationEnum = z\n  .enum([\n    'adonisjs',\n    'docusaurus',\n    'dotnet',\n    'elysiajs',\n    'express',\n    'fastapi',\n    'fastify',\n    'go',\n    'hono',\n    'html',\n    'laravel',\n    'litestar',\n    'nestjs',\n    'nextjs',\n    'nitro',\n    'nuxt',\n    'platformatic',\n    'react',\n    'rust',\n    'svelte',\n    'vue',\n  ])\n  .nullable()\n\n/** Configuration for the OpenAPI/Swagger specification */\nexport const specConfigurationSchema = z.object({\n  /**\n   * URL to an OpenAPI/Swagger document\n   *\n   * @deprecated Please move `url` to the top level and remove the `spec` prefix.\n   *\n   * @example\n   * ```ts\n   * const oldConfiguration = {\n   *   spec: {\n   *     url: 'https://example.com/openapi.json',\n   *   },\n   * }\n   *\n   * const newConfiguration = {\n   *   url: 'https://example.com/openapi.json',\n   * }\n   * ```\n   **/\n  url: z.string().optional(),\n  /**\n   * Directly embed the OpenAPI document.\n   * Can be a string, object, function returning an object, or null.\n   *\n   * @remarks It's recommended to pass a URL instead of content.\n   *\n   * @deprecated Please move `content` to the top level and remove the `spec` prefix.\n   *\n   * @example\n   * ```ts\n   * const oldConfiguration = {\n   *   spec: {\n   *     content: '\u2026',\n   *   },\n   * }\n   *\n   * const newConfiguration = {\n   *   content: '\u2026',\n   * }\n   * ```\n   **/\n  content: z.union([z.string(), z.record(z.any()), z.function().returns(z.record(z.any())), z.null()]).optional(),\n  /**\n   * The title of the OpenAPI document.\n   *\n   * @example 'Scalar Galaxy'\n   *\n   * @deprecated Please move `title` to the top level and remove the `spec` prefix.\n   */\n  title: z.string().optional(),\n  /**\n   * The slug of the OpenAPI document used in the URL.\n   *\n   * If none is passed, the title will be used.\n   *\n   * If no title is used, it'll just use the index.\n   *\n   * @example 'scalar-galaxy'\n   *\n   * @deprecated Please move `slug` to the top level and remove the `spec` prefix.\n   */\n  slug: z.string().optional(),\n})\nexport type SpecConfiguration = z.infer<typeof specConfigurationSchema>\n\n/** Configuration for path-based routing */\nconst pathRoutingSchema = z.object({\n  /** Base path for the API reference */\n  basePath: z.string(),\n})\n\n/** Configuration for the Api Client */\nexport const apiClientConfigurationSchema = z.object({\n  /**\n   * URL to an OpenAPI/Swagger document\n   **/\n  url: z.string().optional(),\n  /**\n   * Directly embed the OpenAPI document.\n   * Can be a string, object, function returning an object, or null.\n   *\n   * @remarks It's recommended to pass a URL instead of content.\n   **/\n  content: z.union([z.string(), z.record(z.any()), z.function().returns(z.record(z.any())), z.null()]).optional(),\n  /**\n   * The title of the OpenAPI document.\n   *\n   * @example 'Scalar Galaxy'\n   */\n  title: z.string().optional(),\n  /**\n   * The slug of the OpenAPI document used in the URL.\n   *\n   * If none is passed, the title will be used.\n   *\n   * If no title is used, it'll just use the index.\n   *\n   * @example 'scalar-galaxy'\n   */\n  slug: z.string().optional(),\n  /**\n   * The OpenAPI/Swagger document to render\n   *\n   * @deprecated Use `url` and `content` on the top level instead.\n   **/\n  spec: specConfigurationSchema.optional(),\n  /** Prefill authentication */\n  authentication: z.any().optional(), // Temp until we bring in the new auth\n  /** Base URL for the API server */\n  baseServerURL: z.string().optional(),\n  /**\n   * Whether to hide the client button\n   * @default false\n   */\n  hideClientButton: z.boolean().optional().default(false).catch(false),\n  /** URL to a request proxy for the API client */\n  proxyUrl: z.string().optional(),\n  /** Key used with CTRL/CMD to open the search modal (defaults to 'k' e.g. CMD+k) */\n  searchHotKey: searchHotKeyEnum.optional(),\n  /** List of OpenAPI server objects */\n  servers: z.array(z.any()).optional(), // Using any for OpenAPIV3_1.ServerObject\n  /**\n   * Whether to show the sidebar\n   * @default true\n   */\n  showSidebar: z.boolean().optional().default(true).catch(true),\n  /** A string to use one of the color presets */\n  theme: themeIdEnum.optional().default('default').catch('default'),\n  /** Integration type identifier */\n  _integration: integrationEnum.optional(),\n  /** onRequestSent is fired when a request is sent */\n  onRequestSent: z.function().args(z.string()).returns(z.void()).optional(),\n  /** Whether to persist auth to local storage */\n  persistAuth: z.boolean().optional().default(false).catch(false),\n  /** Plugins for the API client */\n  plugins: z.array(ApiClientPluginSchema).optional(),\n})\n\nexport type ApiClientConfiguration = z.infer<typeof apiClientConfigurationSchema>\n\n/** Configuration for the Api Client without the transform since it cannot be merged */\nconst _apiReferenceConfigurationSchema = apiClientConfigurationSchema.merge(\n  z.object({\n    /**\n     * The layout to use for the references\n     * @default 'modern'\n     */\n    layout: z.enum(['modern', 'classic']).optional().default('modern').catch('modern'),\n    /**\n     * URL to a request proxy for the API client\n     * @deprecated Use proxyUrl instead\n     */\n    proxy: z.string().optional(),\n    /**\n     * Plugins for the API reference\n     */\n    plugins: z.array(ApiReferencePluginSchema).optional(),\n    /**\n     * Allows the user to inject an editor for the spec\n     * @default false\n     */\n    isEditable: z.boolean().optional().default(false).catch(false),\n    /**\n     * Controls whether the references show a loading state in the intro\n     * @default false\n     */\n    isLoading: z.boolean().optional().default(false).catch(false),\n    /**\n     * Whether to show models in the sidebar, search, and content.\n     * @default false\n     */\n    hideModels: z.boolean().optional().default(false).catch(false),\n    /**\n     * Sets the file type of the document to download, set to `none` to hide the download button\n     * @default 'both'\n     */\n    documentDownloadType: z.enum(['yaml', 'json', 'both', 'none']).optional().default('both').catch('both'),\n    /**\n     * Whether to show the \"Download OpenAPI Document\" button\n     * @default false\n     * @deprecated Use `documentDownloadType: 'none'` instead\n     */\n    hideDownloadButton: z.boolean().optional(),\n    /**\n     * Whether to show the \"Test Request\" button\n     * @default false\n     */\n    hideTestRequestButton: z.boolean().optional().default(false).catch(false),\n    /**\n     * Whether to show the sidebar search bar\n     * @default false\n     */\n    hideSearch: z.boolean().optional().default(false).catch(false),\n    /** Whether dark mode is on or off initially (light mode) */\n    darkMode: z.boolean().optional(),\n    /** forceDarkModeState makes it always this state no matter what */\n    forceDarkModeState: z.enum(['dark', 'light']).optional(),\n    /**\n     * Whether to show the dark mode toggle\n     * @default false\n     */\n    hideDarkModeToggle: z.boolean().optional().default(false).catch(false),\n    /**\n     * If used, passed data will be added to the HTML header\n     * @see https://unhead.unjs.io/usage/composables/use-seo-meta\n     */\n    metaData: z.any().optional(), // Using any for UseSeoMetaInput since it's an external type\n    /**\n     * Path to a favicon image\n     * @default undefined\n     * @example '/favicon.svg'\n     */\n    favicon: z.string().optional(),\n    /**\n     * List of httpsnippet clients to hide from the clients menu\n     * By default hides Unirest, pass `[]` to show all clients\n     */\n    hiddenClients: z\n      .union([z.record(z.union([z.boolean(), z.array(z.string())])), z.array(z.string()), z.literal(true)])\n      .optional(),\n    /** Determine the HTTP client that's selected by default */\n    defaultHttpClient: z\n      .object({\n        targetKey: z.custom<TargetId>(),\n        clientKey: z.string(),\n      })\n      .optional(),\n    /** Custom CSS to be added to the page */\n    customCss: z.string().optional(),\n    /** onSpecUpdate is fired on spec/swagger content change */\n    onSpecUpdate: z.function().args(z.string()).returns(z.void()).optional(),\n    /** onServerChange is fired on selected server change */\n    onServerChange: z.function().args(z.string()).returns(z.void()).optional(),\n    /** onDocumentSelect is fired when the config is selected */\n    onDocumentSelect: z.function().returns(z.void().or(z.void().promise())).optional(),\n    /** Callback fired when the reference is fully loaded */\n    onLoaded: z.function().returns(z.void().or(z.void().promise())).optional(),\n    /** onBeforeRequest is fired before the request is sent. You can modify the request here. */\n    onBeforeRequest: z\n      .function()\n      .args(z.object({ request: z.instanceof(Request) }))\n      .returns(z.void().or(z.void().promise()))\n      .optional(),\n    /**\n     * onShowMore is fired when the user clicks the \"Show more\" button on the references\n     * @param tagId - The ID of the tag that was clicked\n     */\n    onShowMore: z.function().args(z.string()).returns(z.void().or(z.void().promise())).optional(),\n    /**\n     * onSidebarClick is fired when the user clicks on a sidebar item\n     * @param href - The href of the sidebar item that was clicked\n     */\n    onSidebarClick: z.function().args(z.string()).returns(z.void().or(z.void().promise())).optional(),\n    /**\n     * Route using paths instead of hashes, your server MUST support this\n     * @example '/standalone-api-reference/:custom(.*)?'\n     * @experimental\n     * @default undefined\n     */\n    pathRouting: pathRoutingSchema.optional(),\n    /**\n     * Customize the heading portion of the hash\n     * @param heading - The heading object\n     * @returns A string ID used to generate the URL hash\n     * @default (heading) => `#description/${heading.slug}`\n     */\n    generateHeadingSlug: z\n      .function()\n      .args(\n        z.object({\n          slug: z.string().default('headingSlug'),\n        }),\n      )\n      .returns(z.string())\n      .optional(),\n    /**\n     * Customize the model portion of the hash\n     * @param model - The model object with a name property\n     * @returns A string ID used to generate the URL hash\n     * @default (model) => slug(model.name)\n     */\n    generateModelSlug: z\n      .function()\n      .args(\n        z.object({\n          name: z.string().default('modelName'),\n        }),\n      )\n      .returns(z.string())\n      .optional(),\n    /**\n     * Customize the tag portion of the hash\n     * @param tag - The tag object\n     * @returns A string ID used to generate the URL hash\n     * @default (tag) => slug(tag.name)\n     */\n    generateTagSlug: z\n      .function()\n      .args(\n        z.object({\n          name: z.string().default('tagName'),\n        }),\n      )\n      .returns(z.string())\n      .optional(),\n    /**\n     * Customize the operation portion of the hash\n     * @param operation - The operation object\n     * @returns A string ID used to generate the URL hash\n     * @default (operation) => `${operation.method}${operation.path}`\n     */\n    generateOperationSlug: z\n      .function()\n      .args(\n        z.object({\n          path: z.string(),\n          operationId: z.string().optional(),\n          method: z.string(),\n          summary: z.string().optional(),\n        }),\n      )\n      .returns(z.string())\n      .optional(),\n    /**\n     * Customize the webhook portion of the hash\n     * @param webhook - The webhook object\n     * @returns A string ID used to generate the URL hash\n     * @default (webhook) => slug(webhook.name)\n     */\n    generateWebhookSlug: z\n      .function()\n      .args(\n        z.object({\n          name: z.string(),\n          method: z.string().optional(),\n        }),\n      )\n      .returns(z.string())\n      .optional(),\n    /**\n     * To handle redirects, pass a function that will recieve:\n     * - The current path with hash if pathRouting is enabled\n     * - The current hash if hashRouting (default)\n     * And then passes that to history.replaceState\n     *\n     * @example hashRouting (default)\n     * ```ts\n     * redirect: (hash: string) => hash.replace('#v1/old-path', '#v2/new-path')\n     * ```\n     * @example pathRouting\n     * ```ts\n     * redirect: (pathWithHash: string) => {\n     *   if (pathWithHash.includes('#')) {\n     *     return pathWithHash.replace('/v1/tags/user#operation/get-user', '/v1/tags/user/operation/get-user')\n     *   }\n     *   return null\n     * }\n     * ```\n     */\n    redirect: z.function().args(z.string()).returns(z.string().nullable().optional()).optional(),\n    /**\n     * Whether to include default fonts\n     * @default true\n     */\n    withDefaultFonts: z.boolean().optional().default(true).catch(true),\n    /** Whether to expand all tags by default */\n    defaultOpenAllTags: z.boolean().optional(),\n    /**\n     * Function to sort tags\n     * @default 'alpha' for alphabetical sorting\n     */\n    tagsSorter: z.union([z.literal('alpha'), z.function().args(z.any(), z.any()).returns(z.number())]).optional(),\n    /**\n     * Function to sort operations\n     * @default 'alpha' for alphabetical sorting\n     */\n    operationsSorter: z\n      .union([z.literal('alpha'), z.literal('method'), z.function().args(z.any(), z.any()).returns(z.number())])\n      .optional(),\n  }),\n)\n\nconst OLD_PROXY_URL = 'https://api.scalar.com/request-proxy'\nconst NEW_PROXY_URL = 'https://proxy.scalar.com'\n\n/** Migrate the configuration through a transform */\nconst migrateConfiguration = <T extends z.infer<typeof _apiReferenceConfigurationSchema>>(_configuration: T): T => {\n  const configuration = { ..._configuration }\n\n  // Migrate hideDownloadButton to documentDownloadType\n  if (configuration.hideDownloadButton) {\n    console.warn(\n      `[DEPRECATED] You're using the deprecated 'hideDownloadButton' attribute. Use 'documentDownloadType: 'none'' instead.`,\n    )\n\n    configuration.documentDownloadType = 'none'\n  }\n\n  // Remove the spec prefix\n  if (configuration.spec?.url) {\n    console.warn(\n      `[DEPRECATED] You're using the deprecated 'spec.url' attribute. Remove the spec prefix and move the 'url' attribute to the top level.`,\n    )\n\n    configuration.url = configuration.spec.url\n    delete configuration.spec\n  }\n\n  if (configuration.spec?.content) {\n    console.warn(\n      `[DEPRECATED] You're using the deprecated 'spec.content' attribute. Remove the spec prefix and move the 'content' attribute to the top level.`,\n    )\n\n    configuration.content = configuration.spec.content\n    delete configuration.spec\n  }\n\n  // Migrate proxy URL\n  if (configuration.proxy) {\n    console.warn(\n      `[DEPRECATED] You're using the deprecated 'proxy' attribute, rename it to 'proxyUrl' or update the package.`,\n    )\n\n    if (!configuration.proxyUrl) {\n      configuration.proxyUrl = configuration.proxy\n    }\n\n    delete configuration.proxy\n  }\n\n  if (configuration.proxyUrl === OLD_PROXY_URL) {\n    console.warn(`[DEPRECATED] Warning: configuration.proxyUrl points to our old proxy (${OLD_PROXY_URL}).`)\n    console.warn(`[DEPRECATED] We are overwriting the value and use the new proxy URL (${NEW_PROXY_URL}) instead.`)\n    console.warn(\n      `[DEPRECATED] Action Required: You should manually update your configuration to use the new URL (${NEW_PROXY_URL}). Read more: https://github.com/scalar/scalar`,\n    )\n\n    configuration.proxyUrl = NEW_PROXY_URL\n  }\n\n  return configuration\n}\n\n/** Configuration for the Api Reference */\nexport const apiReferenceConfigurationSchema = _apiReferenceConfigurationSchema.transform(migrateConfiguration)\n\n/** Configuration after parsing, this is the main type */\nexport type ApiReferenceConfiguration = Omit<\n  z.infer<typeof _apiReferenceConfigurationSchema>,\n  // Remove deprecated attributes\n  'proxy' | 'spec' | 'authentication'\n> & {\n  authentication?: AuthenticationConfiguration\n}\n\n/** Api Config which includes the default config */\ntype ApiReferenceConfigurationWithDefault = ApiReferenceConfiguration & {\n  /** Whether to use this config as the default one */\n  default?: boolean\n}\n\n/** Configuration for a single config with sources */\nexport type ApiReferenceConfigurationWithSources = Omit<ApiReferenceConfigurationWithDefault, 'default'> & {\n  sources: (SpecConfiguration & { default?: boolean })[]\n}\n\n/** Configuration for multiple Api References */\nexport type AnyApiReferenceConfiguration =\n  | Partial<ApiReferenceConfiguration>\n  | Partial<ApiReferenceConfigurationWithSources>\n  | Partial<ApiReferenceConfigurationWithDefault>[]\n  | Partial<ApiReferenceConfigurationWithSources>[]\n\n/** Typeguard to check to narrow the configs to the one with sources */\nexport const isConfigurationWithSources = (\n  config: AnyApiReferenceConfiguration,\n): config is Partial<ApiReferenceConfigurationWithSources> =>\n  Boolean(!Array.isArray(config) && config && 'sources' in config && Array.isArray(config.sources))\n"],
  "mappings": "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",
  "names": []
}
